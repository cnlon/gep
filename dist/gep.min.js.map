{"version":3,"file":"gep.min.js","sources":["../src/cache.js","../../../../../../\u0000babelHelpers","../src/index.js"],"sourcesContent":["/**\n * A doubly linked list-based Least Recently Used (LRU)\n * cache. Will keep most recently used items while\n * discarding least recently used items when its limit is\n * reached. This is a bare-bone version of\n * Rasmus Andersson's js-lru:\n *\n *   https://github.com/rsms/js-lru\n *\n * @param {Number} limit\n * @constructor\n */\n\nexport default function Cache (limit) {\n  this.size = 0\n  this.limit = limit\n  this.head = this.tail = undefined\n  this._keymap = Object.create(null)\n}\n\nvar p = Cache.prototype\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed\n  if (this.size === this.limit) {\n    removed = this.shift()\n  }\n\n  var entry = this.get(key, true)\n  if (!entry) {\n    entry = {\n      key: key,\n    }\n    this._keymap[key] = entry\n    if (this.tail) {\n      this.tail.newer = entry\n      entry.older = this.tail\n    } else {\n      this.head = entry\n    }\n    this.tail = entry\n    this.size++\n  }\n  entry.value = value\n\n  return removed\n}\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head\n  if (entry) {\n    this.head = this.head.newer\n    this.head.older = undefined\n    entry.newer = entry.older = undefined\n    this._keymap[entry.key] = undefined\n    this.size--\n  }\n  return entry\n}\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key]\n  if (entry === undefined) return\n  if (entry === this.tail) {\n    return returnEntry\n      ? entry\n      : entry.value\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer\n    }\n    entry.newer.older = entry.older // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer // C. --> E\n  }\n  entry.newer = undefined // D --x\n  entry.older = this.tail // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry // E. <-- D\n  }\n  this.tail = entry\n  return returnEntry\n    ? entry\n    : entry.value\n}\n","var babelHelpers = {};\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nexport var jsx = function () {\n  var REACT_ELEMENT_TYPE = typeof Symbol === \"function\" && Symbol.for && Symbol.for(\"react.element\") || 0xeac7;\n  return function createRawReactElement(type, props, key, children) {\n    var defaultProps = type && type.defaultProps;\n    var childrenLength = arguments.length - 3;\n\n    if (!props && childrenLength !== 0) {\n      props = {};\n    }\n\n    if (props && defaultProps) {\n      for (var propName in defaultProps) {\n        if (props[propName] === void 0) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    } else if (!props) {\n      props = defaultProps || {};\n    }\n\n    if (childrenLength === 1) {\n      props.children = children;\n    } else if (childrenLength > 1) {\n      var childArray = Array(childrenLength);\n\n      for (var i = 0; i < childrenLength; i++) {\n        childArray[i] = arguments[i + 3];\n      }\n\n      props.children = childArray;\n    }\n\n    return {\n      $$typeof: REACT_ELEMENT_TYPE,\n      type: type,\n      key: key === undefined ? null : '' + key,\n      ref: null,\n      props: props,\n      _owner: null\n    };\n  };\n}();\n\nexport var asyncIterator = function (iterable) {\n  if (typeof Symbol === \"function\") {\n    if (Symbol.asyncIterator) {\n      var method = iterable[Symbol.asyncIterator];\n      if (method != null) return method.call(iterable);\n    }\n\n    if (Symbol.iterator) {\n      return iterable[Symbol.iterator]();\n    }\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n};\n\nexport var asyncGenerator = function () {\n  function AwaitValue(value) {\n    this.value = value;\n  }\n\n  function AsyncGenerator(gen) {\n    var front, back;\n\n    function send(key, arg) {\n      return new Promise(function (resolve, reject) {\n        var request = {\n          key: key,\n          arg: arg,\n          resolve: resolve,\n          reject: reject,\n          next: null\n        };\n\n        if (back) {\n          back = back.next = request;\n        } else {\n          front = back = request;\n          resume(key, arg);\n        }\n      });\n    }\n\n    function resume(key, arg) {\n      try {\n        var result = gen[key](arg);\n        var value = result.value;\n\n        if (value instanceof AwaitValue) {\n          Promise.resolve(value.value).then(function (arg) {\n            resume(\"next\", arg);\n          }, function (arg) {\n            resume(\"throw\", arg);\n          });\n        } else {\n          settle(result.done ? \"return\" : \"normal\", result.value);\n        }\n      } catch (err) {\n        settle(\"throw\", err);\n      }\n    }\n\n    function settle(type, value) {\n      switch (type) {\n        case \"return\":\n          front.resolve({\n            value: value,\n            done: true\n          });\n          break;\n\n        case \"throw\":\n          front.reject(value);\n          break;\n\n        default:\n          front.resolve({\n            value: value,\n            done: false\n          });\n          break;\n      }\n\n      front = front.next;\n\n      if (front) {\n        resume(front.key, front.arg);\n      } else {\n        back = null;\n      }\n    }\n\n    this._invoke = send;\n\n    if (typeof gen.return !== \"function\") {\n      this.return = undefined;\n    }\n  }\n\n  if (typeof Symbol === \"function\" && Symbol.asyncIterator) {\n    AsyncGenerator.prototype[Symbol.asyncIterator] = function () {\n      return this;\n    };\n  }\n\n  AsyncGenerator.prototype.next = function (arg) {\n    return this._invoke(\"next\", arg);\n  };\n\n  AsyncGenerator.prototype.throw = function (arg) {\n    return this._invoke(\"throw\", arg);\n  };\n\n  AsyncGenerator.prototype.return = function (arg) {\n    return this._invoke(\"return\", arg);\n  };\n\n  return {\n    wrap: function (fn) {\n      return function () {\n        return new AsyncGenerator(fn.apply(this, arguments));\n      };\n    },\n    await: function (value) {\n      return new AwaitValue(value);\n    }\n  };\n}();\n\nexport var asyncGeneratorDelegate = function (inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  if (typeof Symbol === \"function\" && Symbol.iterator) {\n    iter[Symbol.iterator] = function () {\n      return this;\n    };\n  }\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner.throw === \"function\") {\n    iter.throw = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner.return === \"function\") {\n    iter.return = function (value) {\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n};\n\nexport var asyncToGenerator = function (fn) {\n  return function () {\n    var gen = fn.apply(this, arguments);\n    return new Promise(function (resolve, reject) {\n      function step(key, arg) {\n        try {\n          var info = gen[key](arg);\n          var value = info.value;\n        } catch (error) {\n          reject(error);\n          return;\n        }\n\n        if (info.done) {\n          resolve(value);\n        } else {\n          return Promise.resolve(value).then(function (value) {\n            step(\"next\", value);\n          }, function (err) {\n            step(\"throw\", err);\n          });\n        }\n      }\n\n      return step(\"next\");\n    });\n  };\n};\n\nexport var classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nexport var createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nexport var defineEnumerableProperties = function (obj, descs) {\n  for (var key in descs) {\n    var desc = descs[key];\n    desc.configurable = desc.enumerable = true;\n    if (\"value\" in desc) desc.writable = true;\n    Object.defineProperty(obj, key, desc);\n  }\n\n  return obj;\n};\n\nexport var defaults = function (obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n};\n\nexport var defineProperty = function (obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n};\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexport var get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nexport var inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar _instanceof = function (left, right) {\n  if (right != null && typeof Symbol !== \"undefined\" && right[Symbol.hasInstance]) {\n    return right[Symbol.hasInstance](left);\n  } else {\n    return left instanceof right;\n  }\n};\n\nexport var interopRequireDefault = function (obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n};\n\nexport var interopRequireWildcard = function (obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n};\n\nexport var newArrowCheck = function (innerThis, boundThis) {\n  if (innerThis !== boundThis) {\n    throw new TypeError(\"Cannot instantiate an arrow function\");\n  }\n};\n\nexport var objectDestructuringEmpty = function (obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n};\n\nexport var objectWithoutProperties = function (obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n};\n\nexport var possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\nexport var selfGlobal = typeof global === \"undefined\" ? self : global;\n\nexport var set = function set(object, property, value, receiver) {\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent !== null) {\n      set(parent, property, value, receiver);\n    }\n  } else if (\"value\" in desc && desc.writable) {\n    desc.value = value;\n  } else {\n    var setter = desc.set;\n\n    if (setter !== undefined) {\n      setter.call(receiver, value);\n    }\n  }\n\n  return value;\n};\n\nexport var slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexport var slicedToArrayLoose = function (arr, i) {\n  if (Array.isArray(arr)) {\n    return arr;\n  } else if (Symbol.iterator in Object(arr)) {\n    var _arr = [];\n\n    for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) {\n      _arr.push(_step.value);\n\n      if (i && _arr.length === i) break;\n    }\n\n    return _arr;\n  } else {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n};\n\nexport var taggedTemplateLiteral = function (strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n};\n\nexport var taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\nexport var temporalRef = function (val, name, undef) {\n  if (val === undef) {\n    throw new ReferenceError(name + \" is not defined - temporal dead zone\");\n  } else {\n    return val;\n  }\n};\n\nexport var temporalUndefined = {};\n\nexport var toArray = function (arr) {\n  return Array.isArray(arr) ? arr : Array.from(arr);\n};\n\nexport var toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\nbabelHelpers;\n\nexport { _typeof as typeof, _extends as extends, _instanceof as instanceof }","/**\n * Come from Vue.js v1.0.24\n *\n *   https://github.com/vuejs/vue\n *\n */\n\nimport Cache from './cache.js'\n\nconst defaultAllowedKeywords =\n        'Math,Date,this,true,false,null,undefined,Infinity,NaN,'\n      + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,'\n      + 'encodeURIComponent,parseInt,parseFloat'\n\n// keywords that don't make sense inside expressions\nconst improperKeywordsRE =\n  new RegExp(\n    '^('\n    + ('break,case,class,catch,const,continue,debugger,default,'\n      + 'delete,do,else,export,extends,finally,for,function,if,'\n      + 'import,in,instanceof,let,return,super,switch,throw,try,'\n      + 'var,while,with,yield,enum,await,implements,package,'\n      + 'protected,static,interface,private,public'\n    ).replace(/,/g, '\\\\b|')\n    + '\\\\b)'\n  )\n\nconst wsRE = /\\s/g\nconst newlineRE = /\\n/g\nconst saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g\nconst restoreRE = /\"(\\d+)\"/g\nconst pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/\nconst identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g\nconst booleanLiteralRE = /^(?:true|false)$/\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nlet saved = []\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save (str, isString) {\n  let i = saved.length\n  saved[i] = isString\n    ? str.replace(newlineRE, '\\\\n')\n    : str\n  return '\"' + i + '\"'\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore (str, i) {\n  return saved[i]\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} expr\n * @return {Boolean}\n */\n\nfunction isSimplePath (expr) {\n  return pathTestRE.test(expr)\n    // don't treat true/false as paths\n    && !booleanLiteralRE.test(expr)// &&\n    // Math constants e.g. Math.PI, Math.E etc.\n    // && expr.slice(0, 5) !== 'Math.'\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} expr\n * @return {Boolean}\n */\n\nfunction parseKeywordsToRE (keywords) {\n  return new RegExp(\n        '^(?:'\n      + keywords\n        .replace(wsRE, '')\n        .replace(/\\$/g, '\\\\$')\n        .replace(/,/g, '\\\\b|')\n      + '\\\\b)'\n    )\n}\n\n/**\n * @param {Object} config\n *   - {Number} cache, default 1000\n *              limited for Cache\n *   - {Array} params, default ['$']\n *              first one is for scope and you can add more params\n * @constructor\n */\n\nexport default class Gep {\n  constructor ({\n    cache = 1000,\n    scope = '$',\n    scopes,\n    params,\n  } = {}) {\n    if (!params) {\n      if (scopes) {\n        params = Object.keys(scopes)\n        params.unshift(scope)\n      } else {\n        params = [scope]\n      }\n    }\n    this._cache = new Cache(cache)\n\n    this._funcParams = params.join(',').replace(wsRE, '')\n    this._funcBefore = 'function(' + this._funcParams + '){return '\n\n    this.scope = scope\n\n    if (scopes) {\n      let keywords\n      Object.keys(scopes).forEach(key => {\n        keywords = scopes[key]\n        if (Array.isArray(keywords)) {\n          keywords = keywords.join(',')\n        }\n        scopes[key] = parseKeywordsToRE(keywords)\n      })\n      this._scopeREs = scopes\n    }\n\n    let paramsPrefix\n    if (params.length > 1) {\n      params = params.slice(1)\n      paramsPrefix = params.join(',')\n      this._paramsPrefixRE = parseKeywordsToRE(paramsPrefix)\n    }\n\n    let allowedKeywords = paramsPrefix\n                        ? paramsPrefix\n                          + ','\n                          + defaultAllowedKeywords\n                        : defaultAllowedKeywords\n    this._allowedKeywordsRE = parseKeywordsToRE(allowedKeywords)\n  }\n\n  _addScope (expr) {\n    if (this._paramsPrefixRE && this._paramsPrefixRE.test(expr)) {\n      return expr\n    }\n    if (this._scopeREs) {\n      let keys = Object.keys(this._scopeREs)\n      let re\n      for (let i = 0, l = keys.length; i < l; i++) {\n        re = this._scopeREs[keys[i]]\n        if (re.test(expr)) {\n          return keys[i] + '.' + expr\n        }\n      }\n    }\n    return this.scope + '.' + expr\n  }\n\n  /**\n   * Rewrite an expression, prefixing all path accessors with\n   * `scope.` and return the new expression.\n   *\n   * @param {String} expr\n   * @return {String}\n   */\n\n  compile (expr) {\n    if (improperKeywordsRE.test(expr)) {\n      if (process.env.NODE_ENV !== 'production'\n        && console && console.warn\n      ) {\n        console.warn('Avoid using reserved keywords in expression: ' + expr)\n      }\n    }\n    // reset state\n    saved.length = 0\n    // save strings and object literal keys\n    let body = expr\n      .replace(saveRE, save)\n      .replace(wsRE, '')\n    // rewrite all paths\n    // pad 1 space here becaue the regex matches 1 extra char\n    body = (' ' + body)\n      .replace(identRE, (raw) => {\n        let c = raw.charAt(0)\n        let path = raw.slice(1)\n        if (this._allowedKeywordsRE.test(path)) {\n          return raw\n        } else {\n          path = path.indexOf('\"') > -1\n            ? path.replace(restoreRE, restore)\n            : path\n          return c + this._addScope(path)\n        }\n      })\n      .replace(restoreRE, restore)\n    return body.slice(1)\n  }\n\n  /**\n   * Build a getter function. Requires eval.\n   *\n   * We isolate the try/catch so it doesn't affect the\n   * optimization of the parse function when it is not called.\n   *\n   * @param {String} body\n   * @param {String} toStr\n   * @return {Function|String|undefined}\n   */\n\n  make (body, toStr) {\n    if (toStr) {\n      return this._funcBefore + body + '}'\n    }\n    try {\n      /* eslint-disable no-new-func */\n      return new Function(this._funcParams, 'return ' + body)\n      /* eslint-enable no-new-func */\n    } catch (e) {\n      if (process.env.NODE_ENV !== 'production'\n        && console && console.warn\n      ) {\n        console.warn(\n            'Invalid expression. Generated function body: '\n          + body\n        )\n      }\n    }\n  }\n\n  /**\n   * Parse an expression.\n   *\n   * @param {String} expr\n   * @return {Function}\n   */\n\n  parse (expr) {\n    if (!(expr && (expr = expr.trim()))) {\n      return ''\n    }\n    // try cache\n    let hit = this._cache.get(expr)\n    if (hit) {\n      return hit\n    }\n    let res = isSimplePath(expr) && expr.indexOf('[') < 0\n      ? this._addScope(expr)\n      // dynamic getter\n      : this.compile(expr)\n    this._cache.put(expr, res)\n    return res\n  }\n}\n"],"names":["Cache","limit","size","head","this","tail","undefined","_keymap","Object","create","save","str","isString","i","saved","length","replace","newlineRE","restore","isSimplePath","expr","pathTestRE","test","booleanLiteralRE","parseKeywordsToRE","keywords","RegExp","wsRE","p","prototype","put","key","value","removed","shift","entry","get","newer","older","returnEntry","classCallCheck","AwaitValue","AsyncGenerator","gen","send","arg","Promise","resolve","reject","request","next","back","front","resume","result","then","settle","done","err","type","_invoke","return","Symbol","asyncIterator","throw","wrap","fn","apply","arguments","await","instance","Constructor","TypeError","createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","defaultAllowedKeywords","improperKeywordsRE","saveRE","restoreRE","identRE","Gep","cache","scope","scopes","params","keys","unshift","_cache","_funcParams","join","_funcBefore","forEach","Array","isArray","_scopeREs","paramsPrefix","slice","_paramsPrefixRE","allowedKeywords","_allowedKeywordsRE","re","l","process","env","NODE_ENV","console","warn","body","raw","c","charAt","path","_this2","indexOf","_addScope","toStr","Function","e","trim","hit","res","compile"],"mappings":"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"}