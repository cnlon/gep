{"version":3,"file":"gep.js","sources":["../src/cache.js","../src/index.js"],"sourcesContent":["/**\n * A doubly linked list-based Least Recently Used (LRU)\n * cache. Will keep most recently used items while\n * discarding least recently used items when its limit is\n * reached. This is a bare-bone version of\n * Rasmus Andersson's js-lru:\n *\n *   https://github.com/rsms/js-lru\n *\n * @param {Number} limit\n * @constructor\n */\n\nexport default function Cache (limit) {\n  this.size = 0\n  this.limit = limit\n  this.head = this.tail = undefined\n  this._keymap = Object.create(null)\n}\n\nvar p = Cache.prototype\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed\n  if (this.size === this.limit) {\n    removed = this.shift()\n  }\n\n  var entry = this.get(key, true)\n  if (!entry) {\n    entry = {\n      key: key,\n    }\n    this._keymap[key] = entry\n    if (this.tail) {\n      this.tail.newer = entry\n      entry.older = this.tail\n    } else {\n      this.head = entry\n    }\n    this.tail = entry\n    this.size++\n  }\n  entry.value = value\n\n  return removed\n}\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head\n  if (entry) {\n    this.head = this.head.newer\n    this.head.older = undefined\n    entry.newer = entry.older = undefined\n    this._keymap[entry.key] = undefined\n    this.size--\n  }\n  return entry\n}\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key]\n  if (entry === undefined) return\n  if (entry === this.tail) {\n    return returnEntry\n      ? entry\n      : entry.value\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer\n    }\n    entry.newer.older = entry.older // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer // C. --> E\n  }\n  entry.newer = undefined // D --x\n  entry.older = this.tail // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry // E. <-- D\n  }\n  this.tail = entry\n  return returnEntry\n    ? entry\n    : entry.value\n}\n","/*!\n * Come from Vue.js v1.0.24\n *\n *   https://github.com/vuejs/vue\n *\n */\n\nimport Cache from './cache.js'\n\nconst expressionCache = new Cache(1000)\n\nlet scopeKeyword = '$'\nlet globalKeyword = '_'\n\nlet allowedKeywords =\n  'Math,Date,this,true,false,null,undefined,Infinity,NaN,'\n  + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,'\n  + 'encodeURIComponent,parseInt,parseFloat'\nlet allowedKeywordsRE =\n  new RegExp(\n      '^('\n    + (globalKeyword + ',' + allowedKeywords).replace(/,/g, '\\\\b|')\n    + '\\\\b)'\n  )\n\n// keywords that don't make sense inside expressions\nconst improperKeywords =\n    'break,case,class,catch,const,continue,debugger,default,'\n  + 'delete,do,else,export,extends,finally,for,function,if,'\n  + 'import,in,instanceof,let,return,super,switch,throw,try,'\n  + 'var,while,with,yield,enum,await,implements,package,'\n  + 'protected,static,interface,private,public'\nconst improperKeywordsRE =\n  new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)')\n\nconst wsRE = /\\s/g\nconst newlineRE = /\\n/g\nconst saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g\nconst restoreRE = /\"(\\d+)\"/g\nconst pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/\nconst identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g\nconst booleanLiteralRE = /^(?:true|false)$/\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nlet saved = []\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save (str, isString) {\n  var i = saved.length\n  saved[i] = isString\n    ? str.replace(newlineRE, '\\\\n')\n    : str\n  return '\"' + i + '\"'\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite (raw) {\n  var c = raw.charAt(0)\n  var path = raw.slice(1)\n  if (allowedKeywordsRE.test(path)) {\n    return raw\n  } else {\n    path = path.indexOf('\"') > -1\n      ? path.replace(restoreRE, restore)\n      : path\n    return c + scopeKeyword + '.' + path\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore (str, i) {\n  return saved[i]\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter (exp) {\n  if (improperKeywordsRE.test(exp)) {\n    if (process.env.NODE_ENV !== 'production' && console && console.warn) {\n      console.warn('Avoid using reserved keywords in expression: ' + exp)\n    }\n  }\n  // reset state\n  saved.length = 0\n  // save strings and object literal keys\n  var body = exp\n    .replace(saveRE, save)\n    .replace(wsRE, '')\n  // rewrite all paths\n  // pad 1 space here becaue the regex matches 1 extra char\n  body = (' ' + body)\n    .replace(identRE, rewrite)\n    .replace(restoreRE, restore)\n  return makeGetterFn(body)\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn (body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function(\n      scopeKeyword,\n      globalKeyword,\n      'return ' + body + ';'\n    )\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && console && console.warn) {\n      console.warn(\n          'Invalid expression. '\n        + 'Generated function body: ' + body\n      )\n    }\n  }\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath (exp) {\n  return pathTestRE.test(exp)\n    // don't treat true/false as paths\n    && !booleanLiteralRE.test(exp)// &&\n    // Math constants e.g. Math.PI, Math.E etc.\n    // && exp.slice(0, 5) !== 'Math.'\n}\n\n/**\n * Set global keyword\n *\n * @param {String} key\n */\n\nfunction setGlobal (key) {\n  if (!key) return\n  globalKeyword = key\n  allowedKeywordsRE =\n    new RegExp(\n        '^('\n      + (globalKeyword + ',' + allowedKeywords).replace(/,/g, '\\\\b|')\n      + '\\\\b)'\n    )\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nexport default function parseExpression (exp, needSet) {\n  exp = exp.trim()\n  // try cache\n  var hit = expressionCache.get(exp)\n  if (hit) {\n    return hit\n  }\n  var res = isSimplePath(exp) && exp.indexOf('[') < 0\n    // optimized super simple getter\n    ? makeGetterFn(scopeKeyword + '.' + exp)\n    // dynamic getter\n    : compileGetter(exp)\n  expressionCache.put(exp, res)\n  return res\n}\n\nparseExpression.setGlobal = setGlobal\n"],"names":[],"mappings":"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"}